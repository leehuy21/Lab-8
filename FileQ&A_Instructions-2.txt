TOPIC: We will build a web server and host the ChatGPT service to answer 
  questions related to files that you uploaded to the web server.


==================================================
PREREQUISITES:
1. Walk through the quickstart tutorial
https://platform.openai.com/docs/quickstart

In this step, you should install Python with a version in between 
version 7 to version 10.  OpenAI has not run on Python version 11 yet 
as of March 3, 2023.

Note that you will now run from outside of the Annaconnda with a different Python.
Download version 10 from this website: https://www.python.org/downloads/ 



--------------------------------------------------
2. Set up an OpenAI API key: 
https://platform.openai.com/docs/api-reference/introduction 

# Open a PowerShell window (as an administrator if you can)
# You will see the PS C:\> prompt 

# Install the official Python bindings, run the following command:
PS C:\> pip install openai

# Visit your API Keys page to retrieve the API key you'll use in your requests.
# Remember that your API key is a secret! Do not share it with others or expose 
#  it in any client-side code (browsers, apps).
https://platform.openai.com/account/api-keys 

You will need these two (both are confidential):
YOUR OPENAI ORG KEY (from the left panel, click on Settings)
OPENAI_API_KEY (from your picture on the top right of the browser, click on your organization, then click on View API keys)

--------------------------------------------------
3. Set up a Pinecone API key and index name. 
You can create a new account and index here: https://www.pinecone.io/

For Index, select "FROM COLLECTION" and pick NEW
index_name="ee104"
Dimensions=1536, Metric=Cosine, Pod Type= S1
then click the button "CREATE INDEX"

Get your Pinecone API key from the left panel of the page (something similar to 
https://app.pinecone.io/organizations/-NPr_ukqWSKNUu3bvhuX/projects/us-west1-gcp:85a4c95/keys) 
Also remember your Environment (for example: us-west1-gcp)
PINECONE_API_KEY="YOUR_PINECONE_API_KEY"
PINECONE_ENVIRONMENT="Your_environment"
index_name="ee104"

--------------------------------------------------
4. Trial run on Google Colab to validate your Pinecone account is working properly.

You will see a pop-up window with the title "Creating index openai-trec"
click on "OPEN COLAB" in another tab or another window.
It will look like this: https://colab.research.google.com/github/pinecone-io/examples/blob/master/integrations/openai/semantic_search_openai.ipynb 



Enter where you find on the Google Colab the 2 OPENAI keys and the PINECONE_API_KEY that you obtained from step 2 and step 3 above
Jupiter cell#2:
OPENAI ORG KEY (from the left panel, click on Settings)
OPENAI_API_KEY (from your picture on the top right of the browser, click on your organization, then click on View API keys)

Jupiter cell#6:
index_name="ee104"
PINECONE_API_KEY
PINECONE_ENVIRONMENT



Run the Google Colab from the first Jupiter cell (!pip install pinecone-client openai datasets) to the cell before the last one. 
Do not run the last cell at the bottom of the Jupiter code because it will delete your index.

Feel free to look at the questions from the Jupiter cell query outputs, and replace the existing questions
with these questions to see similar questions generated by the output.

You are now done with the trial run.


--------------------------------------------------
4. You will need official Python bindings and  Node.js and npm for the Next.js client.
You will run this command later:

pip install openai
npm install openai

==================================================
DOWNLOAD THE SOURCE CODE

# Go to: https://github.com/openai/openai-cookbook

# Click on the green color '<> Code" button to download the code. 
# You can download the openai-cookbook-main.zip file to your local computer.

# Unzip the openai-cookbook-main.zip file, remember the directory location.


# There will be a client and a server directory.



==================================================
STORE YOUR OPEN_API_KEY IN THE .env FILE

# Change directory to you folder, for example: 
#  C:\openai-cookbook-main\apps\file-q-and-a\nextjs-with-flask-server

# Create a ".env" file using NotePad++ or any text editor that allow you to save 
#  in this format .env
#  and type this line below, then save the file as "all type" with file name ".env"
#  env stands for environment
# OPEN_API_KEY = "YOUR_API_KEY"
# YOUR OPENAI ORG KEY = "YOUR_OPENAI_ORG_KEY"
# PINECONE_API_KEY="YOUR_PINECONE_API_KEY"
# PINECONE_ENVIRONMENT="Your_environment"

OPENAI_API_KEY = "YOUR_OPENAI_API_KEY"
YOUR OPENAI ORG KEY = "YOUR_PINECONE_API_KEY"
PINECONE_API_KEY="YOUR_PINECONE_API_KEY"
PINECONE_ENV="Your_environment"

==================================================
FOLLOW INSTRUCTIONS FROM THIS SITE:
https://github.com/openai/openai-cookbook/tree/main/apps/file-q-and-a/nextjs-with-flask-server 


--------------------------------------------------
For SERVER side:

1. Change directory to your Server directory.

2. Fill out the config.yaml file with your Pinecone API key, index name and environment.

3. In your PowerShell window, run this command:

# Follow the instruction from this link to enable long path: 
#  https://learn.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation?tabs=registry#enable-long-paths-in-windows-10-version-1607-and-later
#  type regedit from the Windows search bar, then set the value below:
#   [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem]
#   "LongPathsEnabled"=dword:00000001

pip install openai
npm install openai

python install virtualenv  (or c:\python310\Python install virtualenv if you have to use the absolute path)
python -m venv venv
.\venv\Scripts\activate
 #(Now you should be in the virtual environment (venv)
pip install -r .\requirements.txt   (make sure you see no error messages)

python .\app.py

# You should now see the followings:

 * Serving Flask app 'app'
 * Debug mode: on
INFO:werkzeug:←[31m←[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.←[0m
 * Running on http://127.0.0.1:8080
INFO:werkzeug:←[33mPress CTRL+C to quit←[0m
INFO:werkzeug: * Restarting with stat
WARNING:werkzeug: * Debugger is active!
INFO:werkzeug: * Debugger PIN: 576-986-598

Move on to the CLIENT side below.

-------------------------------------------------
For CLIENT side:

1. Open a new PowerShell window
2. Change directory to the CLIENT directory

pip install openai
npm install openai

3. Type the commands to install Node dependencies:
npm install

4. Type the command to run the Next.js client:
npm run dev  (you may want to run npm install -g npm@9.6.0  to upgrade to the latest npm version)

You should see something similar to the followings:
    > file-q-and-a@0.1.0 dev
    > next dev

    ready - started server on 0.0.0.0:3000, url: http://localhost:3000
    event - compiled client and server successfully in 2.7s (166 modules)
    wait  - compiling...
    event - compiled successfully in 124 ms (133 modules)
    Attention: Next.js now collects completely anonymous telemetry regarding usage.
    This information is used to shape Next.js' roadmap and prioritize features.
    You can learn more, including how to opt-out if you'd not like to participate in this anonymous program, by visiting the following URL:
    https://nextjs.org/telemetry

    wait  - compiling / (client and server)...
    event - compiled client and server successfully in 1962 ms (757 modules)


Move on to the next step.

--------------------------------------------------
BROWSE the app

Open http://localhost:3000 with your browser to see the app.

1. Upload a file
2. Search for a content within that file. You should be able to get a good result.



--------------------------------------------------
LIMITATIONS:
The app may sometimes generate answers that are not in the files, or hallucinate about the existence of files that are not uploaded.

==================================================


==================================================